#!/usr/bin/env python

import rospy
import tf
from mavros_msgs.msg import AttitudeTarget
from geometry_msgs.msg import Vector3Stamped

class ATToRPY():
	def __init__(self):
		rospy.init_node('at_to_rpy', anonymous=True)

		self.pub_rpy = rospy.Publisher('/at_to_rpy', Vector3Stamped, queue_size=10)
		self.sub_at = rospy.Subscriber("/attitude_target", AttitudeTarget, self.callback)

		rospy.loginfo("Starting AttitudeTarget to RPY spinner")

		rospy.spin()

	def callback(self, data):
		vec = Vector3Stamped()

		vec.header = data.header

		q = data.orientation
		(vec.vector.x, vec.vector.y, vec.vector.z) = tf.transformations.euler_from_quaternion([q.x, q.y, q.z, q.w])

		self.pub_rpy.publish(vec)

if __name__ == '__main__':
	try:
		spinner = ATToRPY()
	except rospy.ROSInterruptException:
		pass