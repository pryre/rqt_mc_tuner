#!/usr/bin/env python

import rospy
import tf
from mavros_msgs.msg import AttitudeTarget
from std_msgs.msg import Float64	

class ATToRPY():
	def listener():
		self.pub_roll = rospy.Publisher('roll', Float64, queue_size=10)
		self.pub_pitch = rospy.Publisher('pitch', Float64, queue_size=10)
		self.pub_yaw = rospy.Publisher('yaw', Float64, queue_size=10)
		self.sub_at = rospy.Subscriber("/mavros/setpoint_raw/attitude", AttitudeTarget, self.callback)
	
		rospy.loginfo("Starting AttitudeTarget to RPY spinner")
	
		rospy.spin()
		
	def callback(data):
		q = data.orientation
		(r, p, y) = tf.transformations.euler_from_quaternion([q.x, q.y, q.z, q.w])
		
		self.pub_roll(r)
		self.pub_pitch(p)
		self.pub_yaw(y)

if __name__ == '__main__':
	rospy.init_node('at_to_rpy', anonymous=True)
	
	try:
		spinner = ATToRPY()
	except rospy.ROSInterruptException:
		pass